#!@PYTHON@

from subprocess import call
import os
import sys
import tempfile

prefix = "@prefix@"
datadir = "@datadir@/ester/test/models/"

ester_check_dir = tempfile.mkdtemp()

try:
    os.chdir(ester_check_dir)
except:
    print("Could not chdir into: " + ester_check_dir)
    sys.exit(1)


def cleanup():
    try:
        os.remove("test_model1")
    except:
        pass
    try:
        os.remove("test_model2")
    except:
        pass
    try:
        os.remove("test_model3")
    except:
        pass
    try:
        os.remove("test_model4")
    except:
        pass
    try:
        os.remove("test_out1")
    except:
        pass
    try:
        os.remove("test_out2")
    except:
        pass
    try:
        os.remove("test_out3")
    except:
        pass
    try:
        os.remove("test_out4")
    except:
        pass

    os.removedirs(ester_check_dir)
    return


def exec_cmd(cmd, infile=None, outfile=None):
    cmd = prefix+"/bin/"+cmd
    if infile:
        f_in = open(infile,"r")
    else:
        f_in = None
    if outfile:
        f_out = open(outfile,"w")
    else:
        f_out = open("/dev/null", "w")

    try:
        out = call(cmd.split(), stdin=f_in, stdout=f_out)
    except IOError:
        print "IOError"
        print("RUN FAILED (except)")
        sys.exit(1)
    if f_in:
        f_in.close()
    if f_out:
        f_out.close()
    if out:
        print("RUN FAILED (out)")
        sys.exit(1)
    return out

def compare_files(file1,file2):
    try:
        f1=open(file1,"r");
    except:
        return(False)
    try:
        f2=open(file2,"r");
    except:
        f1.close()
        return(False)
    if not f1.read()==f2.read():
        f1.close()
        f2.close()
        return False
    else:
        f1.close()
        f2.close()
        return True


sys.stdout.write("Test model #1:\t")
cmd="ester 1d -M 5" 
cmd=cmd+" -p "+datadir+"/1d.par -noplot -tol 1e-8 -maxit 100 -o test_model1"
exec_cmd(cmd)
cmd="ester output test_model1"
exec_cmd(cmd, datadir+"template_1d", "test_out1")
test_result=compare_files(datadir+"out1","test_out1")
if test_result:
    print("OK")
else:
    print("COMPARE FAILED")
    cleanup()
    sys.exit(1)

sys.stdout.write("Test model #2:\t")
cmd="ester 2d -i test_model1 -Omega_bk 0.5" 
cmd=cmd+" -p "+datadir+"2d.par -noplot -tol 1e-8 -maxit 10 -o test_model2"
exec_cmd(cmd)
cmd="ester output test_model2"
exec_cmd(cmd,datadir+"template_2d","test_out2")
test_result=compare_files(datadir+"out2","test_out2")
if test_result:
    print("OK")
else:
    print("COMPARE FAILED")
    cleanup()
    sys.exit(1)

sys.stdout.write("Test model #3:\t")
cmd="ester 1d -M 10 -Xc 0.5 -i test_model1 -ndomains 16 -npts 20" 
cmd=cmd+" -noplot -tol 1e-8 -maxit 100 -o test_model3"
exec_cmd(cmd)
cmd="ester output test_model3"
exec_cmd(cmd,datadir+"template_1d","test_out3")
test_result=compare_files(datadir+"out3","test_out3")
if test_result:
    print("OK")
else:
    print("COMPARE FAILED")
    cleanup()
    sys.exit(1)

sys.stdout.write("Test model #4:\t")
cmd="ester 2d -i test_model3 -Omega_bk 0.3" 
cmd=cmd+" -p "+datadir+"2d.par -noplot -tol 1e-8 -maxit 10 -o test_model4"
exec_cmd(cmd)
cmd="ester output test_model4"
exec_cmd(cmd,datadir+"template_2d","test_out4")
test_result=compare_files(datadir+"out4","test_out4")
if test_result:
    print("OK")
else:
    print("COMPARE FAILED")
    cleanup()
    sys.exit(1)

cleanup()

print("---------- All tests OK ---------------");
